# Generated by Django 5.1.8 on 2025-09-05 21:14

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('django_classified', '0003_auto_20180717_1107'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('stripe_payment_intent_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('stripe_checkout_session_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('item_price_cents', models.PositiveIntegerField(help_text="Prezzo dell'annuncio in centesimi")),
                ('platform_fee_cents', models.PositiveIntegerField(default=0, help_text='Commissione piattaforma in centesimi')),
                ('stripe_fee_cents', models.PositiveIntegerField(default=0, help_text='Commissione Stripe in centesimi')),
                ('total_amount_cents', models.PositiveIntegerField(help_text='Importo totale in centesimi')),
                ('currency', models.CharField(default='EUR', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'In Attesa'), ('processing', 'In Elaborazione'), ('succeeded', 'Completato'), ('failed', 'Fallito'), ('cancelled', 'Annullato'), ('refunded', 'Rimborsato')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('buyer_email', models.EmailField(max_length=254)),
                ('buyer_name', models.CharField(blank=True, max_length=255)),
                ('shipping_address', models.TextField(blank=True, help_text='Indirizzo di spedizione se necessario')),
                ('notes', models.TextField(blank=True, help_text='Note aggiuntive')),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchases_made', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payment_transactions', to='django_classified.item')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sales_made', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('message', models.TextField(blank=True, help_text='Messaggio opzionale per il venditore')),
                ('delivery_method', models.CharField(choices=[('pickup', 'Ritiro di persona'), ('shipping', 'Spedizione'), ('both', 'Entrambi disponibili')], default='both', max_length=50)),
                ('shipping_address', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'In Attesa'), ('approved', 'Approvata'), ('rejected', 'Rifiutata'), ('expired', 'Scaduta'), ('completed', 'Completata')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(help_text='Scadenza automatica della richiesta')),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_requests_made', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_requests', to='django_classified.item')),
                ('payment_transaction', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase_request', to='payments.paymenttransaction')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_requests_received', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SellerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_account_id', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_onboarding_completed', models.BooleanField(default=False)),
                ('total_sales', models.PositiveIntegerField(default=0)),
                ('total_revenue_cents', models.PositiveIntegerField(default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('accepts_payments', models.BooleanField(default=True, help_text='Accetta pagamenti per i propri annunci')),
                ('auto_accept_payments', models.BooleanField(default=True, help_text='Accetta automaticamente i pagamenti')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='seller_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['buyer', 'status'], name='payments_pa_buyer_i_07a1e6_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['seller', 'status'], name='payments_pa_seller__f8774f_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['status', 'created_at'], name='payments_pa_status_c4e513_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['stripe_payment_intent_id'], name='payments_pa_stripe__3365e3_idx'),
        ),
    ]
